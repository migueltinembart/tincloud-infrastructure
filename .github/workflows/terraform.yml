name: "Terraform"

on:
  push:
    branches: ["main"]
  pull_request:

jobs:
  gitCheckout:
    name: "Checkout"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: ./terraform

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: terraform
          path: ./terraform

  terraform:
    name: "Terraform Apply ${{ matrix.environment.name }}"
    needs: gitCheckout
    strategy:
      fail-fast: false
      matrix:
        os: [self-hosted]
        environment:
          [
            { name: "az-shared", folder: "az/shared" },
            ##{ name: "giswil-shared", folder: "giswil/shared" },
            ##{ name: "global-shared", folder: "global/shared" },
          ]
    runs-on: ${{ matrix.os }}
    environment: ${{ matrix.environment.name }}
    defaults:
      run:
        shell: bash

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: terraform
          path: ./terraform

      - name: install unzip
        run: sudo apt-get install unzip nodejs -y

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: >
          terraform init \
            -input=false \
            -backend-config="resource_group_name=${{vars.resource_group_name}}" \
            -backend-config="storage_account_name=${{vars.storage_account_name}}" \
            -backend-config="container_name=${{vars.container_name}}" \
            -backend-config="key=${{vars.key}}" \
            -backend-config=use_azuread_auth=true \
            -backend-config="tenant_id=${{secrets.tenant_id}}" \
            -backend-config="client_id=${{secrets.client_id}}" \
            -backend-config="client_secret=${{secrets.client_secret}}" \
            -backend-config="subscription_id=${{secrets.subscription_id}}"
        working-directory: ./terraform/${{ matrix.environment.folder }}

      - name: Generate variable file
        run: |
          cat << EOF > ./terraform/${{ matrix.environment.folder }}/variables.tfvars
          ${{ secrets.variables_tfvars }}
          EOF

      - name: Terraform Validate
        run: terraform validate
        working-directory: ./terraform/${{ matrix.environment.folder }}

      - name: Terraform Plan
        run: terraform plan -input=false -out=tfplan -var-file=variables.tfvars
        working-directory: ./terraform/${{ matrix.environment.folder }}
        ##env:
          ##ARM_CLIENT_ID: ${{ secrets.client_id }}
          ##ARM_CLIENT_SECRET: ${{ secrets.client_secret }}
          ##ARM_SUBSCRIPTION_ID: ${{ secrets.subscription_id }}
          ##ARM_TENANT_ID: ${{ secrets.tenant_id }}

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false -var-file=variables.tfvars
        working-directory: ./terraform/${{ matrix.environment.folder }}
        ##env:
          ## ARM_CLIENT_ID: ${{ secrets.client_id }}
          ##ARM_CLIENT_SECRET: ${{ secrets.client_secret }}
          ##ARM_SUBSCRIPTION_ID: ${{ secrets.subscription_id }}
          ##ARM_TENANT_ID: ${{ secrets.tenant_id }}
